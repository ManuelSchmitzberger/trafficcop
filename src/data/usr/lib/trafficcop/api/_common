echo "Content-Type: text/plain"
echo

exec 2>&1

render_ok() {
  echo "OK $REMOTE_CLIENT_ID"
}


set_profile() {
  client_id=$1
  bandwidth=$2
  delay=$3
  loss=$4

  echo "Bandwidth"
  echo $bandwidth

  # sets up the bandwidth limiter
  tc class add dev wlan0 parent 1: classid 1:$client_id htb rate $bandwidth 

  # sets up netem
  if [ "$loss" = "" ]; then
    tc qdisc add dev wlan0 parent 1:$client_id handle ${client_id}66: netem delay $delay
  else
    tc qdisc add dev wlan0 parent 1:$client_id handle ${client_id}66: netem delay $delay loss $loss
  fi

  # sets up the filter
  tc filter add dev wlan0 protocol ip parent 1:0 prio 3 u32 match ip dst $REMOTE_ADDR/32 flowid 1:$client_id
}

reset_profile() {
  client_id=$1

  # delete the filter
  handle=$(tc filter show dev wlan0 | grep $client_id | cut -d " " -f 10)
  if [ "$handle" != "" ]; then
    tc filter del dev wlan0 parent 1: handle $handle prio 3 protocol ip u32
  fi

  # deletes the netem
  tc qdisc del dev wlan0 parent 1:$client_id

  # deletes bandwidth limiter
  tc class del dev wlan0 classid 1:$client_id
}

stop_if_not_post() {
  if [ "$REQUEST_METHOD" != "POST" ]; then
    echo "Status: 400 Bad Request"
    echo "Content-Type: text/plain"
    echo
    echo "This endpoint only accepts GET"
    exit
  fi
}

stop_if_not_get() {
  if [ "$REQUEST_METHOD" != "GET" ]; then
    echo "Status: 400 Bad Request"
    echo "Content-Type: text/plain"
    echo
    echo "This endpoint only accepts POST"
    exit
  fi
}

#
# Middleware starts here :troll:
#

# Get the client ID we need to do all of our stuff.
splitted=$(echo $REMOTE_ADDR | tr "." "\n")

# ash doesn't seem to let us access the last element in an array so
for REMOTE_CLIENT_ID in $splitted; do
  # we need something to fill otherwise syntax error
  echo $REMOTE_CLIENT_ID > /dev/null
done
